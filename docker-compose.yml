services:

  # -----------------------------------------------------
  #  API GATEWAY - Orquestrador do Backend
  # -----------------------------------------------------
  avanade-gateway-api:
    container_name: avanade-gateway-api
    build:
      context: ./back
      dockerfile: AVANADE.GATEWAY.API/Dockerfile
    profiles:
      - gateway
    environment:
      - ASPNETCORE_ENVIRONMENT=Development # Ou Docker
      - ASPNETCORE_URLS=http://+:8080
    ports:
      - "8080:8080"
    networks:
      - avanade-network   
    depends_on:
      rabbitmq:
        condition: service_healthy

  # -----------------------------------------------------
  #  MICROSERVIÇOS DE BACKEND
  # -----------------------------------------------------
  avanade-auth-api:
    container_name: avanade-auth-api
    build:
      context: ./back
      dockerfile: AVANADE.AUTH.API/Dockerfile
    profiles:
      - auth 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__AuthDbConnection=Server=db-auth;Database=AvanadeAuthDb;User Id=sa;Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=True
      - RabbitMq__Host=rabbitmq
    networks:
      - avanade-network
    depends_on:
      db-auth:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  avanade-usuario-api:
    container_name: avanade-usuario-api
    build:
      context: ./back
      dockerfile: AVANADE.USUARIO.API/Dockerfile
    profiles:
      - usuario 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__UsuarioDbConnection=Server=db-usuario;Database=AvanadeUsuarioDb;User Id=sa;Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=True
      - RabbitMq__Host=rabbitmq
    networks:
      - avanade-network
    depends_on:
      db-usuario:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  avanade-estoque-api:
    container_name: avanade-estoque-api
    build:
      context: ./back
      dockerfile: AVANADE.ESTOQUE.API/Dockerfile
    profiles:
      - estoque 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__EstoqueDbConnection=Server=db-estoque;Database=AvanadeEstoqueDb;User Id=sa;Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=True
      - RabbitMq__Host=rabbitmq
    networks:
      - avanade-network
    depends_on:
      db-estoque:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  avanade-vendas-api:
    container_name: avanade-vendas-api
    build:
      context: ./back
      dockerfile: AVANADE.VENDAS.API/Dockerfile
    profiles:
      - vendas 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__VendasDbConnection=Server=db-vendas;Database=AvanadeVendasDb;User Id=sa;Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=True
      - RabbitMq__Host=rabbitmq
    networks:
      - avanade-network
    depends_on:
      db-vendas:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  # -----------------------------------------------------
  #  INFRAESTRUTURA
  # -----------------------------------------------------
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    profiles:
      - infra-menssageria
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    networks:
      - avanade-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-auth:
    container_name: db-auth
    image: mcr.microsoft.com/mssql/server:2022-latest
    profiles:
      - auth 
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
    ports:
      - "1433:1433"
    volumes:
      - db-auth-data:/var/opt/mssql
    networks:
      - avanade-network

  db-usuario:
    container_name: db-usuario
    image: mcr.microsoft.com/mssql/server:2022-latest
    profiles:
      - usuario 
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
    ports:
      - "1434:1433"
    volumes:
      - db-usuario-data:/var/opt/mssql
    networks:
      - avanade-network

  db-estoque:
    container_name: db-estoque
    image: mcr.microsoft.com/mssql/server:2022-latest
    profiles:
      - estoque 
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
    ports:
      - "1435:1433"
    volumes:
      - db-estoque-data:/var/opt/mssql
    networks:
      - avanade-network

  db-vendas:
    container_name: db-vendas
    image: mcr.microsoft.com/mssql/server:2022-latest
    profiles:
      - vendas 
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
    ports:
      - "1436:1433"
    volumes:
      - db-vendas-data:/var/opt/mssql
    networks:
      - avanade-network

# -----------------------------------------------------
#  CONFIGURAÇÕES GLOBAIS
# -----------------------------------------------------
networks:
  avanade-network:
    driver: bridge

volumes:
  db-auth-data:
  db-usuario-data:
  db-estoque-data:
  db-vendas-data: